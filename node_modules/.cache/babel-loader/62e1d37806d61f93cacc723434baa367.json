{"ast":null,"code":"var _jsxFileName = \"/Users/pedrogelado/dev/react-website-smooth-scroll-yt/src/components/Updateprofile/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form, FormWrap, FormLabel, FormInput, FormH1, FormButton, Container, Text, Icon, Alert, FormContent } from './SigninElements';\nimport { Button, ButtonRouter } from '../ButtonElement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UpdateProfile() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    currentUser,\n    updatePassword,\n    updateEmail\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    const promises = [];\n    setLoading(true);\n    setError(\"\");\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    Promise.all(promises).then(() => {\n      history.push(\"/\");\n    }).catch(() => {\n      setError(\"Failed to update account\");\n    }).finally(() => {\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(FormWrap, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          to: \"/\",\n          children: \"GuardMyPi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormContent, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(FormH1, {\n              children: \"Update Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"for\",\n              children: \" Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"email\",\n              ref: emailRef,\n              required: true,\n              defaultValue: currentUser.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"for\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"password\",\n              ref: passwordRef,\n              placeholder: \"Leave blank to keep the same\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"for\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"password\",\n              ref: passwordConfirmRef,\n              placeholder: \"Leave blank to keep the same\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n              disabled: loading,\n              type: \"submit\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(UpdateProfile, \"yPXONjDcwLsR3jqAiTVxEd3HHiE=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["/Users/pedrogelado/dev/react-website-smooth-scroll-yt/src/components/Updateprofile/index.js"],"names":["React","useRef","useState","useAuth","Link","useHistory","Form","FormWrap","FormLabel","FormInput","FormH1","FormButton","Container","Text","Icon","Alert","FormContent","Button","ButtonRouter","UpdateProfile","emailRef","passwordRef","passwordConfirmRef","currentUser","updatePassword","updateEmail","error","setError","loading","setLoading","history","handleSubmit","e","preventDefault","current","value","promises","email","push","Promise","all","then","catch","finally"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\"\nimport { useAuth } from \"../../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport {\nForm,\nFormWrap,\nFormLabel,\nFormInput,\nFormH1,\nFormButton,\nContainer,\nText,\nIcon,\nAlert,\nFormContent} from './SigninElements'\n\nimport {Button, ButtonRouter} from '../ButtonElement';\n\n\n\nexport default function UpdateProfile() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { currentUser, updatePassword, updateEmail } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n    }\n\n    const promises = []\n    setLoading(true)\n    setError(\"\")\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value))\n    }\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value))\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        history.push(\"/\")\n      })\n      .catch(() => {\n        setError(\"Failed to update account\")\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n    return (\n        <>\n        <Container>\n            <FormWrap>\n                <Icon to =\"/\">GuardMyPi</Icon>\n                <FormContent>\n                <Form onSubmit={handleSubmit}>\n                    <FormH1>Update Profile</FormH1>\n                    {error && <Alert>{error}</Alert>}\n                    <FormLabel htmlFor='for'> Email</FormLabel>\n                    <FormInput  type=\"email\" ref={emailRef} required defaultValue={currentUser.email}/>\n                    <FormLabel htmlFor='for'>Password</FormLabel>\n                    <FormInput type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\" required/>\n                    <FormLabel htmlFor='for'>Password</FormLabel>\n                    <FormInput  type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" required/>\n                    <FormButton disabled={loading} type='submit'>Update</FormButton>\n                    <Text><Link to=\"/\">Cancel</Link></Text>\n                </Form>\n            </FormContent>\n            </FormWrap>\n        \n        </Container> \n    </>\n    )\n        \n}\n"]},"metadata":{},"sourceType":"module"}