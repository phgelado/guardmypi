{"ast":null,"code":"var _jsxFileName = \"/Users/pedrogelado/dev/react-website-smooth-scroll-yt/src/components/Registerinterest/index.js\";\nimport React from 'react';\nimport { Form, FormWrap, FormLabel, FormInput, FormH1, FormButton, Container, Text, Icon, FormContent } from './RegisterinterestElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Registerinterest = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(FormWrap, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          to: \"/\",\n          children: \"GuardMyPi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormContent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = Registerinterest;\nexport default Registerinterest;\nexport class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\"\n    };\n  }\n\n  render() {\n    const {\n      status\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.submitForm,\n      action: \"https://formspree.io/f/mzbkndjb\",\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(FormH1, {\n        children: \"Want to know more?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: \"GuardMyPi is in its alpha version, if you want to keep up to date with its development, jot down your details below!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        htmlFor: \"for\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        htmlFor: \"for\",\n        children: \" Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n        type: \"submit\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), status === \"SUCCESS\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Thanks!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 35\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 52\n      }, this), status === \"ERROR\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ooops! There was an error.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({\n          status: \"SUCCESS\"\n        });\n      } else {\n        this.setState({\n          status: \"ERROR\"\n        });\n      }\n    };\n\n    xhr.send(data);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Registerinterest\");","map":{"version":3,"sources":["/Users/pedrogelado/dev/react-website-smooth-scroll-yt/src/components/Registerinterest/index.js"],"names":["React","Form","FormWrap","FormLabel","FormInput","FormH1","FormButton","Container","Text","Icon","FormContent","Registerinterest","MyForm","Component","constructor","props","submitForm","bind","state","status","render","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\nForm,\nFormWrap,\nFormLabel,\nFormInput,\nFormH1,\nFormButton,\nContainer,\nText,\nIcon,\nFormContent} from './RegisterinterestElements'\n\nconst Registerinterest = () => {\n    return (\n        <>\n        <Container>\n            <FormWrap>\n                <Icon to =\"/\">GuardMyPi</Icon>\n                <FormContent>\n                \n            </FormContent>\n            </FormWrap>\n        </Container> \n        </>\n    )\n}\n\nexport default Registerinterest\n\nexport class MyForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.submitForm = this.submitForm.bind(this);\n      this.state = {\n        status: \"\"\n      };\n    }\n  \n    render() {\n      const { status } = this.state;\n      return (\n        <form\n          onSubmit={this.submitForm}\n          action=\"https://formspree.io/f/mzbkndjb\"\n          method=\"POST\"\n        >\n            <FormH1>Want to know more?</FormH1>\n            <Text>GuardMyPi is in its alpha version, if you want to keep up to date with its development, jot down your details below!</Text>\n            <FormLabel htmlFor='for'>Name</FormLabel>\n            <input type='name' required/>\n            <FormLabel htmlFor='for'> Email</FormLabel>\n            <input type='email' required/>\n            <FormButton type='submit'>Continue</FormButton>\n               \n          {status === \"SUCCESS\" ? <p>Thanks!</p> : <button>Submit</button>}\n          {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\n        </form>\n      );\n    }\n  \n    submitForm(ev) {\n      ev.preventDefault();\n      const form = ev.target;\n      const data = new FormData(form);\n      const xhr = new XMLHttpRequest();\n      xhr.open(form.method, form.action);\n      xhr.setRequestHeader(\"Accept\", \"application/json\");\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState !== XMLHttpRequest.DONE) return;\n        if (xhr.status === 200) {\n          form.reset();\n          this.setState({ status: \"SUCCESS\" });\n        } else {\n          this.setState({ status: \"ERROR\" });\n        }\n      };\n      xhr.send(data);\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}