{"ast":null,"code":"var _jsxFileName = \"/Users/pedrogelado/dev/react-website-smooth-scroll-yt/src/components/Forgotpassword/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form, FormWrap, FormLabel, FormInput, FormH1, FormButton, Container, Text, Icon, Alert, FormContent } from './SigninElements';\nimport { Button, ButtonRouter } from '../ButtonElement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ForgotPassword() {\n  _s();\n\n  const emailRef = useRef();\n  const {\n    resetPassword\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setMessage(\"\");\n      setError(\"\");\n      setLoading(true);\n      await resetPassword(emailRef.current.value);\n      setMessage(\"Check your inbox for further instructions\");\n    } catch {\n      setError(\"Username not recognised, failed to reset password\");\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(FormWrap, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          to: \"/\",\n          children: \"GuardMyPi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormContent, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(FormH1, {\n              children: \"Password Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 31\n            }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"for\",\n              children: \" Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"email\",\n              ref: emailRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n              disabled: loading,\n              type: \"submit\",\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/forgot-password\",\n                children: \"Forgot Password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: [\" Need an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/signup\",\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ForgotPassword, \"iOaHCgWgRyRXNdP8VB9pEiJ7fJU=\", false, function () {\n  return [useAuth];\n});\n\n_c = ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/Users/pedrogelado/dev/react-website-smooth-scroll-yt/src/components/Forgotpassword/index.js"],"names":["React","useRef","useState","useAuth","Link","useHistory","Form","FormWrap","FormLabel","FormInput","FormH1","FormButton","Container","Text","Icon","Alert","FormContent","Button","ButtonRouter","ForgotPassword","emailRef","resetPassword","error","setError","message","setMessage","loading","setLoading","handleSubmit","e","preventDefault","current","value"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\"\nimport { useAuth } from \"../../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport {\nForm,\nFormWrap,\nFormLabel,\nFormInput,\nFormH1,\nFormButton,\nContainer,\nText,\nIcon,\nAlert,\nFormContent} from './SigninElements'\n\nimport {Button, ButtonRouter} from '../ButtonElement';\n\n\nexport default function ForgotPassword() {\n  const emailRef = useRef()\n  const { resetPassword } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    try {\n      setMessage(\"\")\n      setError(\"\")\n      setLoading(true)\n      await resetPassword(emailRef.current.value)\n      setMessage(\"Check your inbox for further instructions\")\n    } catch {\n      setError(\"Username not recognised, failed to reset password\")\n    }\n\n    setLoading(false)\n  }\n\n\n    return (\n        <>\n        <Container>\n            <FormWrap>\n                <Icon to =\"/\">GuardMyPi</Icon>\n                <FormContent>\n                <Form onSubmit={handleSubmit}>\n                    <FormH1>Password Reset</FormH1>\n                    {error && <Alert>{error}</Alert>}\n                    {message && <Alert>{message}</Alert>}\n                    <FormLabel htmlFor='for'> Email</FormLabel>\n                    <FormInput type='email' ref={emailRef} required/>\n                    <FormButton disabled={loading} type='submit'>Reset Password</FormButton>\n                    <Text> <Link to=\"/forgot-password\">Forgot Password?</Link></Text>\n                <Text> Need an account? <Link to=\"/signup\">Sign Up</Link></Text>\n                </Form>\n            </FormContent>\n            </FormWrap>\n        \n        </Container> \n    </>\n    )\n        \n}\n\n"]},"metadata":{},"sourceType":"module"}