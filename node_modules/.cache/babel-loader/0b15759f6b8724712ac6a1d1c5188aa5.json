{"ast":null,"code":"import React from'react';import Icon1 from\"../../images/svg-1.svg\";import Icon2 from\"../../images/svg-2.svg\";import Icon3 from\"../../images/svg-3.svg\";import{ServicesContainer,ServicesH1,ServicesWrapper,ServicesCard,ServicesIcon,ServicesH2,ServicesP}from'./ServicesElements';/* To keep cards to the same size add line breaks <br />*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Services=function Services(){return/*#__PURE__*/_jsxs(ServicesContainer,{id:\"services\",children:[/*#__PURE__*/_jsx(ServicesH1,{children:\"Our Services\"}),/*#__PURE__*/_jsxs(ServicesWrapper,{children:[/*#__PURE__*/_jsxs(ServicesCard,{children:[/*#__PURE__*/_jsx(ServicesIcon,{src:Icon1}),/*#__PURE__*/_jsx(ServicesH2,{children:\"Reduce expenses\"}),/*#__PURE__*/_jsx(ServicesP,{children:\"GuardMyPi is an open-source, free to use security software tool. Your only cost is the hardware you want to pair with it!\"})]}),/*#__PURE__*/_jsxs(ServicesCard,{children:[/*#__PURE__*/_jsx(ServicesIcon,{src:Icon2}),/*#__PURE__*/_jsx(ServicesH2,{children:\"Remote streaming\"}),/*#__PURE__*/_jsx(ServicesP,{children:\"You can access your GuardMyPi stream from anywhere in the world!\"})]}),/*#__PURE__*/_jsxs(ServicesCard,{children:[/*#__PURE__*/_jsx(ServicesIcon,{src:Icon3}),/*#__PURE__*/_jsx(ServicesH2,{children:\"Smart security\"}),/*#__PURE__*/_jsxs(ServicesP,{children:[\"With our ML algorithms, this is to be filled. \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]})]})]})]});};export default Services;","map":{"version":3,"sources":["/Users/pedrogelado/Documents/GitHub/guardmypi/src/components/Services/index.js"],"names":["React","ServicesContainer","ServicesH1","ServicesWrapper","ServicesCard","ServicesIcon","ServicesH2","ServicesP","Services","Icon1","Icon2","Icon3"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,8HAIA,OAAQC,iBAAR,CACAC,UADA,CAEAC,eAFA,CAGAC,YAHA,CAIAC,YAJA,CAKAC,UALA,CAMAC,SANA,KAMgB,oBANhB,CAQA,0D,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,mBACI,MAAC,iBAAD,EAAmB,EAAE,CAAC,UAAtB,wBACI,KAAC,UAAD,2BADJ,cAEI,MAAC,eAAD,yBACI,MAAC,YAAD,yBACI,KAAC,YAAD,EAAc,GAAG,CAAGC,KAApB,EADJ,cAEI,KAAC,UAAD,8BAFJ,cAGI,KAAC,SAAD,wIAHJ,GADJ,cAMI,MAAC,YAAD,yBACI,KAAC,YAAD,EAAc,GAAG,CAAGC,KAApB,EADJ,cAEI,KAAC,UAAD,+BAFJ,cAGI,KAAC,SAAD,+EAHJ,GANJ,cAWI,MAAC,YAAD,yBACI,KAAC,YAAD,EAAc,GAAG,CAAGC,KAApB,EADJ,cAEI,KAAC,UAAD,6BAFJ,cAGI,MAAC,SAAD,0EAAyD,aAAzD,cAA+D,aAA/D,cAAqE,aAArE,GAHJ,GAXJ,GAFJ,GADJ,CAsBH,CAvBD,CAyBA,cAAeH,CAAAA,QAAf","sourcesContent":["import React from 'react'\nimport Icon1 from '../../images/svg-1.svg'\nimport Icon2 from '../../images/svg-2.svg'\nimport Icon3 from '../../images/svg-3.svg'\nimport {ServicesContainer,\nServicesH1,\nServicesWrapper,\nServicesCard,\nServicesIcon,\nServicesH2,\nServicesP} from './ServicesElements';\n\n/* To keep cards to the same size add line breaks <br />*/\n\nconst Services = () => {\n    return (\n        <ServicesContainer id='services'>\n            <ServicesH1>Our Services</ServicesH1>\n            <ServicesWrapper>\n                <ServicesCard>\n                    <ServicesIcon src ={Icon1}/>\n                    <ServicesH2>Reduce expenses</ServicesH2>\n                    <ServicesP>GuardMyPi is an open-source, free to use security software tool. Your only cost is the hardware you want to pair with it!</ServicesP>\n                </ServicesCard>\n                <ServicesCard>\n                    <ServicesIcon src ={Icon2}/>\n                    <ServicesH2>Remote streaming</ServicesH2>\n                    <ServicesP>You can access your GuardMyPi stream from anywhere in the world!</ServicesP>\n                </ServicesCard>\n                <ServicesCard>\n                    <ServicesIcon src ={Icon3}/>\n                    <ServicesH2>Smart security</ServicesH2>\n                    <ServicesP>With our ML algorithms, this is to be filled. <br /><br /><br /></ServicesP>\n                </ServicesCard>\n            </ServicesWrapper>\n        </ServicesContainer>\n    )\n}\n\nexport default Services\n"]},"metadata":{},"sourceType":"module"}